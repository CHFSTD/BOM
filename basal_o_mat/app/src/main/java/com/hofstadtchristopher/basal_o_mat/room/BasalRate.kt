package com.hofstadtchristopher.basal_o_mat.room

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.Ignore
import androidx.room.PrimaryKey
import kotlin.math.roundToInt

/**
 *  Basalrate Data Class and room entity which contains the insulin dose of each hour,
 *  optiopnal notes and a function which returns the dailydose of this basalrate.
 *  Requires a name, id (primary key in room database) is autogenerated
 */
@Entity(tableName = "BasalRates")
data class BasalRate(
    @ColumnInfo(name = "00")
    var rate00: Double = 0.0,

    @ColumnInfo(name = "01")
    var rate01: Double = 0.0,

    @ColumnInfo(name = "02")
    var rate02: Double = 0.0,

    @ColumnInfo(name = "03")
    var rate03: Double = 0.0,

    @ColumnInfo(name = "04")
    var rate04: Double = 0.0,

    @ColumnInfo(name = "05")
    var rate05: Double = 0.0,

    @ColumnInfo(name = "06")
    var rate06: Double = 0.0,

    @ColumnInfo(name = "07")
    var rate07: Double = 0.0,

    @ColumnInfo(name = "08")
    var rate08: Double = 0.0,

    @ColumnInfo(name = "09")
    var rate09: Double = 0.0,

    @ColumnInfo(name = "10")
    var rate10: Double = 0.0,

    @ColumnInfo(name = "11")
    var rate11: Double = 0.0,

    @ColumnInfo(name = "12")
    var rate12: Double = 0.0,

    @ColumnInfo(name = "13")
    var rate13: Double = 0.0,

    @ColumnInfo(name = "14")
    var rate14: Double = 0.0,

    @ColumnInfo(name = "15")
    var rate15: Double = 0.0,

    @ColumnInfo(name = "16")
    var rate16: Double = 0.0,

    @ColumnInfo(name = "17")
    var rate17: Double = 0.0,

    @ColumnInfo(name = "18")
    var rate18: Double = 0.0,

    @ColumnInfo(name = "19")
    var rate19: Double = 0.0,

    @ColumnInfo(name = "20")
    var rate20: Double = 0.0,

    @ColumnInfo(name = "21")
    var rate21: Double = 0.0,

    @ColumnInfo(name = "22")
    var rate22: Double = 0.0,

    @ColumnInfo(name = "23")
    var rate23: Double = 0.0,

    @ColumnInfo(name = "Name")
    val name: String,

    @ColumnInfo(name = "Note")
    var note: String = ""
    ) {

    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name = "ID")
    var id: Int = 0

    fun setRate(time: Int, value: Double) {
        when(time) {
            0 ->    rate00 = value
            1 ->    rate01 = value
            2 ->    rate02 = value
            3 ->    rate03 = value
            4 ->    rate04 = value
            5 ->    rate05 = value
            6 ->    rate06 = value
            7 ->    rate07 = value
            8 ->    rate08 = value
            9 ->    rate09 = value
            10 ->   rate10 = value
            11 ->   rate11 = value
            12 ->   rate12 = value
            13 ->   rate13 = value
            14 ->   rate14 = value
            15 ->   rate15 = value
            16 ->   rate16 = value
            17 ->   rate17 = value
            18 ->   rate18 = value
            19 ->   rate19 = value
            20 ->   rate20 = value
            21 ->   rate21 = value
            22 ->   rate22 = value
            23 ->   rate23 = value
        }
    }

    fun getRate(time: Int): Double {
        var res = 0.0
        when(time) {
            0 ->    res = rate00
            1 ->    res = rate01
            2 ->    res = rate02
            3 ->    res = rate03
            4 ->    res = rate04
            5 ->    res = rate05
            6 ->    res = rate06
            7 ->    res = rate07
            8 ->    res = rate08
            9 ->    res = rate09
            10 ->   res = rate10
            11 ->   res = rate11
            12 ->   res = rate12
            13 ->   res = rate13
            14 ->   res = rate14
            15 ->   res = rate15
            16 ->   res = rate16
            17 ->   res = rate17
            18 ->   res = rate18
            19 ->   res = rate19
            20 ->   res = rate20
            21 ->   res = rate21
            22 ->   res = rate22
            23 ->   res = rate23
        }
        return res
    }

    fun dayRate(): Double {
        val sum: Double = (rate00
                + rate01
                + rate02
                + rate03
                + rate04
                + rate05
                + rate06
                + rate07
                + rate08
                + rate09
                + rate10
                + rate11
                + rate12
                + rate13
                + rate14
                + rate15
                + rate16
                + rate17
                + rate18
                + rate19
                + rate20
                + rate21
                + rate22
                + rate23)
        //round to 3 decimal places
        return (sum * 1000.0).roundToInt() / 1000.0
    }
}